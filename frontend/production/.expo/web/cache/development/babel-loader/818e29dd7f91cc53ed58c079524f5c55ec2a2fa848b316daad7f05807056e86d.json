{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ComponentForJSONKey1 = function ComponentForJSONKey1(_ref) {\n  var data = _ref.data;\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Component for JSON Key 1\"\n    }), _jsxs(Text, {\n      children: [\"Data: \", JSON.stringify(data)]\n    })]\n  });\n};\nvar ComponentForJSONKey2 = function ComponentForJSONKey2(_ref2) {\n  var data = _ref2.data;\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Component for JSON Key 2\"\n    }), _jsxs(Text, {\n      children: [\"Data: \", JSON.stringify(data)]\n    })]\n  });\n};\nfunction Results() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    jsonData = _useState2[0],\n    setJsonData = _useState2[1];\n  useEffect(function () {\n    axios.get('./data.json').then(function (response) {\n      setJsonData(response.data);\n    }).catch(function (error) {\n      console.error('Error fetching JSON data:', error);\n    });\n  }, []);\n  var renderComponents = function renderComponents() {\n    if (!jsonData) {\n      return _jsx(\"div\", {\n        children: \"Loading...\"\n      });\n    }\n    var keys = Object.keys(jsonData);\n    if (keys.includes('key1')) {\n      return _jsx(ComponentForJSONKey1, {\n        data: jsonData.key1\n      });\n    } else if (keys.includes('key2')) {\n      return _jsx(ComponentForJSONKey2, {\n        data: jsonData.key2\n      });\n    } else {\n      return _jsx(\"div\", {\n        children: \"No valid JSON key found\"\n      });\n    }\n  };\n  return _jsx(View, {\n    children: renderComponents()\n  });\n}\nexport default Results;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","TextInput","Button","Alert","Text","axios","jsx","_jsx","jsxs","_jsxs","ComponentForJSONKey1","_ref","data","children","JSON","stringify","ComponentForJSONKey2","_ref2","Results","_useState","_useState2","_slicedToArray","jsonData","setJsonData","get","then","response","catch","error","console","renderComponents","keys","Object","includes","key1","key2"],"sources":["/Users/pranavipanduga/NUS-NCS-Hackathon-2024/components/screens/Results.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, TextInput, Button, Alert, Text } from 'react-native';\nimport axios from 'axios';\n\n// Sample component for JSON key 1\nconst ComponentForJSONKey1 = ({ data }) => {\n  return (\n    <View>\n      <Text>Component for JSON Key 1</Text>\n      <Text>Data: {JSON.stringify(data)}</Text>\n    </View>\n  );\n};\n\n// Sample component for JSON key 2\nconst ComponentForJSONKey2 = ({ data }) => {\n  return (\n    <View>\n      <Text>Component for JSON Key 2</Text>\n      <Text>Data: {JSON.stringify(data)}</Text>\n    </View>\n  );\n};\n\nfunction Results() {\n  const [jsonData, setJsonData] = useState(null);\n  useEffect(() => {\n    axios.get('./data.json')\n      .then(response => {\n        setJsonData(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching JSON data:', error);\n      });\n  }, []);\n  \n\n  // Function to render components based on JSON keys\n  const renderComponents = () => {\n    if (!jsonData) {\n      return <div>Loading...</div>;\n    }\n\n    // Check keys present in JSON data\n    const keys = Object.keys(jsonData);\n\n    if (keys.includes('key1')) {\n      // Render components for JSON with 'key1'\n      return <ComponentForJSONKey1 data={jsonData.key1} />;\n    } else if (keys.includes('key2')) {\n      // Render components for JSON with 'key2'\n      return <ComponentForJSONKey2 data={jsonData.key2} />;\n    } else {\n      return <div>No valid JSON key found</div>;\n    }\n  };\n\n  return (\n    <View>\n      {renderComponents()}\n    </View>\n  );\n}\n\nexport default Results;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAEnD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAClC,OACEH,KAAA,CAACV,IAAI;IAAAc,QAAA,GACHN,IAAA,CAACH,IAAI;MAAAS,QAAA,EAAC;IAAwB,CAAM,CAAC,EACrCJ,KAAA,CAACL,IAAI;MAAAS,QAAA,GAAC,QAAM,EAACC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IAAA,CAAO,CAAC;EAAA,CACrC,CAAC;AAEX,CAAC;AAGD,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAAC,KAAA,EAAiB;EAAA,IAAXL,IAAI,GAAAK,KAAA,CAAJL,IAAI;EAClC,OACEH,KAAA,CAACV,IAAI;IAAAc,QAAA,GACHN,IAAA,CAACH,IAAI;MAAAS,QAAA,EAAC;IAAwB,CAAM,CAAC,EACrCJ,KAAA,CAACL,IAAI;MAAAS,QAAA,GAAC,QAAM,EAACC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IAAA,CAAO,CAAC;EAAA,CACrC,CAAC;AAEX,CAAC;AAED,SAASM,OAAOA,CAAA,EAAG;EACjB,IAAAC,SAAA,GAAgCtB,QAAQ,CAAC,IAAI,CAAC;IAAAuB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5BtB,SAAS,CAAC,YAAM;IACdO,KAAK,CAACmB,GAAG,CAAC,aAAa,CAAC,CACrBC,IAAI,CAAC,UAAAC,QAAQ,EAAI;MAChBH,WAAW,CAACG,QAAQ,CAACd,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDe,KAAK,CAAC,UAAAC,KAAK,EAAI;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAIN,IAAME,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7B,IAAI,CAACR,QAAQ,EAAE;MACb,OAAOf,IAAA;QAAAM,QAAA,EAAK;MAAU,CAAK,CAAC;IAC9B;IAGA,IAAMkB,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACT,QAAQ,CAAC;IAElC,IAAIS,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE;MAEzB,OAAO1B,IAAA,CAACG,oBAAoB;QAACE,IAAI,EAAEU,QAAQ,CAACY;MAAK,CAAE,CAAC;IACtD,CAAC,MAAM,IAAIH,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE;MAEhC,OAAO1B,IAAA,CAACS,oBAAoB;QAACJ,IAAI,EAAEU,QAAQ,CAACa;MAAK,CAAE,CAAC;IACtD,CAAC,MAAM;MACL,OAAO5B,IAAA;QAAAM,QAAA,EAAK;MAAuB,CAAK,CAAC;IAC3C;EACF,CAAC;EAED,OACEN,IAAA,CAACR,IAAI;IAAAc,QAAA,EACFiB,gBAAgB,CAAC;EAAC,CACf,CAAC;AAEX;AAEA,eAAeZ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}