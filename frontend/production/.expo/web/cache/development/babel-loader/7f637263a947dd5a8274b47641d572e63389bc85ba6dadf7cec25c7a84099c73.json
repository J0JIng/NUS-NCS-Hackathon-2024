{"ast":null,"code":"import { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport LocationDropdownComponent from \"../dropdowncomponents/LocationDropdownComponent\";\nimport DateDropdownComponent from \"../dropdowncomponents/DateDropdownComponent\";\nimport TimeDropdownComponent from \"../dropdowncomponents/TimeDropdownComponent\";\nimport EventDropdownComponent from \"../dropdowncomponents/EventDropdownComponent\";\nimport { styles } from \"./HomePage.jsx\";\nimport Benson from \"../../assets/Benson.jsx\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function QuestionsForProviders(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: styles.appContainer,\n    children: [_jsx(View, {\n      style: styles.sectionContainer,\n      children: _jsx(Benson, {\n        width: 200,\n        height: 200,\n        fill: \"black\"\n      })\n    }), _jsx(View, {\n      style: questionsStyles.header,\n      children: _jsx(Text, {\n        children: \"Please answer the following questions\"\n      })\n    }), _jsxs(View, {\n      style: questionsStyles.questionContainerWithBorder,\n      children: [_jsx(Text, {\n        style: questionsStyles.questionText,\n        children: \"\\\"Home\\\" Location\"\n      }), _jsx(HomeDropdownComponent, {})]\n    }), _jsxs(View, {\n      style: questionsStyles.questionContainerWithBorder,\n      children: [_jsx(Text, {\n        style: questionsStyles.questionText,\n        children: \"Event Location\"\n      }), _jsx(LocationDropdownComponent, {})]\n    }), _jsxs(View, {\n      style: questionsStyles.questionContainerWithBorder,\n      children: [_jsx(Text, {\n        style: questionsStyles.questionText,\n        children: \"Date & Time\"\n      }), _jsxs(View, {\n        style: questionsStyles.dateTimeContainer,\n        children: [_jsx(DateDropdownComponent, {}), _jsx(TimeDropdownComponent, {})]\n      })]\n    }), _jsx(View, {\n      style: questionsStyles.questionContainerWithBorder,\n      children: _jsx(Text, {\n        style: questionsStyles.questionText,\n        children: \"Event\"\n      })\n    })]\n  });\n}\n;\nvar questionsStyles = StyleSheet.create({\n  questionContainerWithBorder: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 12,\n    borderWidth: 1,\n    borderColor: 'grey',\n    padding: 8\n  },\n  questionText: {\n    textAlign: 'center'\n  },\n  dateTimeContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 8\n  },\n  container: {\n    flex: 1,\n    margin: 20,\n    paddingHorizontal: 16\n  },\n  input: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 24,\n    borderBottomWidth: 1,\n    borderBottomColor: 'grey'\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: 'grey',\n    width: '70%',\n    marginRight: 8,\n    padding: 8\n  },\n  goals: {\n    flex: 5\n  },\n  goalItem: {\n    margin: 8,\n    borderRadius: 6,\n    backgroundColor: '#5e0acc',\n    padding: 8,\n    color: 'white'\n  }\n});","map":{"version":3,"names":["useState","StyleSheet","Text","View","Button","TextInput","Pressable","LocationDropdownComponent","DateDropdownComponent","TimeDropdownComponent","EventDropdownComponent","styles","Benson","jsx","_jsx","jsxs","_jsxs","QuestionsForProviders","_ref","navigation","style","appContainer","children","sectionContainer","width","height","fill","questionsStyles","header","questionContainerWithBorder","questionText","HomeDropdownComponent","dateTimeContainer","create","flexDirection","justifyContent","alignItems","marginBottom","borderWidth","borderColor","padding","textAlign","container","flex","margin","paddingHorizontal","input","borderBottomWidth","borderBottomColor","textInput","marginRight","goals","goalItem","borderRadius","backgroundColor","color"],"sources":["/Users/janelle/dev/NusNcsHackathon/NUS-NCS-Hackathon-2024/components/screens/QuestionsForProviders.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { StyleSheet, Text, View, Button, TextInput, Pressable } from 'react-native';\nimport LocationDropdownComponent from '../dropdowncomponents/LocationDropdownComponent';\nimport DateDropdownComponent from '../dropdowncomponents/DateDropdownComponent';\nimport TimeDropdownComponent from '../dropdowncomponents/TimeDropdownComponent';\nimport EventDropdownComponent from '../dropdowncomponents/EventDropdownComponent';\n\nimport {styles} from './HomePage.jsx';\nimport Benson from '../../assets/Benson.jsx'\n\nexport default function QuestionsForProviders ({navigation}) {\n    return (\n        <View style = {styles.appContainer}>\n            <View style ={styles.sectionContainer}>\n            <Benson width={200} height={200} fill=\"black\" />\n        </View>\n\n        <View style = {questionsStyles.header}>\n            <Text>Please answer the following questions</Text>\n        </View>\n        <View style = {questionsStyles.questionContainerWithBorder}>\n            <Text style = {questionsStyles.questionText}>\"Home\" Location</Text>\n            <HomeDropdownComponent/>\n        </View>\n\n        <View style = {questionsStyles.questionContainerWithBorder}>\n            <Text style = {questionsStyles.questionText}>Event Location</Text>\n            <LocationDropdownComponent/>\n        </View>\n        <View style = {questionsStyles.questionContainerWithBorder}>\n        <Text style = {questionsStyles.questionText}>Date & Time</Text>\n            <View style = {questionsStyles.dateTimeContainer}>\n                <DateDropdownComponent/>\n                <TimeDropdownComponent/>\n            </View>\n        </View>\n        <View style = {questionsStyles.questionContainerWithBorder}>\n            <Text style = {questionsStyles.questionText}>Event</Text>\n        </View>\n    </View>\n\n    );\n};\n\nconst questionsStyles = StyleSheet.create({\n\n    questionContainerWithBorder: {\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginBottom: 12,\n        borderWidth: 1,\n        borderColor: 'grey',\n        padding: 8,\n    },\n\n    questionText: {\n        textAlign: 'center'\n    },\n\n    dateTimeContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 8,\n    },\n\n    container: {\n        flex: 1,\n        margin: 20,\n        paddingHorizontal: 16,\n    },\n    input: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems:'center',\n        marginBottom: 24, \n        borderBottomWidth: 1,\n        borderBottomColor: 'grey'\n    },\n    textInput: {\n        borderWidth: 1,\n        borderColor: 'grey',\n        width: '70%',\n        marginRight: 8,\n        padding: 8\n    },\n    goals: {\n        flex: 5\n    },\n    goalItem: {\n        margin: 8,\n        borderRadius: 6,\n        backgroundColor: '#5e0acc',\n        padding: 8,\n        color: 'white'\n    },\n\n    \n\n});\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}