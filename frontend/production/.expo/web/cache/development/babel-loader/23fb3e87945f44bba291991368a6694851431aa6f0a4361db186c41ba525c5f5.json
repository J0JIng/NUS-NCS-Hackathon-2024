{"ast":null,"code":"import React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles as homeStyles } from \"./HomePage.jsx\";\nimport Benson from \"../../assets/Benson.jsx\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Users(_ref) {\n  var navigation = _ref.navigation;\n  var pressHandler = function pressHandler() {\n    navigation.goBack();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.sectionContainer,\n      children: _jsx(Benson, {\n        width: 200,\n        height: 200,\n        fill: \"black\"\n      })\n    }), _jsx(Text, {\n      style: homeStyles.text,\n      children: \"based on your requirements...\"\n    }), _jsx(Text, {\n      style: styles.resultstext,\n      children: \"results from json file\"\n    }), _jsx(View, {\n      styles: styles.time,\n      children: _jsx(Button, {\n        title: \"back to questions screen\",\n        onPress: pressHandler\n      })\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#F7F9FF',\n    flex: 1,\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    padding: 16\n  },\n  inputContainer: {\n    marginTop: 20,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: 'gray',\n    padding: 10,\n    marginRight: 10\n  },\n  selectedTime: {\n    fontSize: 18,\n    marginTop: 10\n  },\n  resultstext: {\n    fontFamily: 'Montserrat_700Bold',\n    fontSize: 24,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","TextInput","Button","Alert","Text","styles","homeStyles","Benson","jsx","_jsx","jsxs","_jsxs","Users","_ref","navigation","pressHandler","goBack","style","container","children","sectionContainer","width","height","fill","text","resultstext","time","title","onPress","create","backgroundColor","flex","justifyContent","alignItems","padding","inputContainer","marginTop","flexDirection","input","borderWidth","borderColor","marginRight","selectedTime","fontSize","fontFamily","textAlign"],"sources":["C:/Users/ojing/Documents/GitHub/NUS-NCS-Hackathon-2024/components/screens/Results.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, TextInput, Button, Alert, Text } from 'react-native';\r\nimport {styles as homeStyles} from './HomePage.jsx';\r\n\r\nimport Benson from '../../assets/Benson.jsx'\r\n\r\n\r\nexport default function Users ({navigation}) {\r\n  const pressHandler = () => {\r\n    navigation.goBack();\r\n  }\r\n\r\n  //use state functions for the rnpicker and the dropdowns\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n        <View style ={styles.sectionContainer}>\r\n          <Benson width={200} height={200} fill=\"black\" />\r\n        </View>\r\n        <Text style={homeStyles.text}>based on your requirements...</Text>\r\n        <Text style={styles.resultstext}>results from json file</Text>\r\n    \r\n\r\n      <View styles={styles.time}>\r\n        <Button title= 'back to questions screen' onPress={pressHandler}/>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#F7F9FF',\r\n    flex: 1,\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  inputContainer: {\r\n    marginTop: 20,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    borderWidth: 1,\r\n    borderColor: 'gray',\r\n    padding: 10,\r\n    marginRight: 10,\r\n  },\r\n  selectedTime: {\r\n    fontSize: 18,\r\n    marginTop: 10,\r\n  },\r\n  resultstext: {\r\n    fontFamily: 'Montserrat_700Bold',\r\n    fontSize: 24,\r\n    textAlign: 'center'\r\n  },\r\n});"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAExC,SAAQC,MAAM,IAAIC,UAAU;AAE5B,OAAOC,MAAM;AAA+B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG5C,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAgB;EAAA,IAAbC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACxC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBD,UAAU,CAACE,MAAM,CAAC,CAAC;EACrB,CAAC;EAID,OACEL,KAAA,CAACZ,IAAI;IAACkB,KAAK,EAAEZ,MAAM,CAACa,SAAU;IAAAC,QAAA,GAC1BV,IAAA,CAACV,IAAI;MAACkB,KAAK,EAAGZ,MAAM,CAACe,gBAAiB;MAAAD,QAAA,EACpCV,IAAA,CAACF,MAAM;QAACc,KAAK,EAAE,GAAI;QAACC,MAAM,EAAE,GAAI;QAACC,IAAI,EAAC;MAAO,CAAE;IAAC,CAC5C,CAAC,EACPd,IAAA,CAACL,IAAI;MAACa,KAAK,EAAEX,UAAU,CAACkB,IAAK;MAAAL,QAAA,EAAC;IAA6B,CAAM,CAAC,EAClEV,IAAA,CAACL,IAAI;MAACa,KAAK,EAAEZ,MAAM,CAACoB,WAAY;MAAAN,QAAA,EAAC;IAAsB,CAAM,CAAC,EAGhEV,IAAA,CAACV,IAAI;MAACM,MAAM,EAAEA,MAAM,CAACqB,IAAK;MAAAP,QAAA,EACxBV,IAAA,CAACP,MAAM;QAACyB,KAAK,EAAE,0BAA0B;QAACC,OAAO,EAAEb;MAAa,CAAC;IAAC,CAC9D,CAAC;EAAA,CACH,CAAC;AAEX;AAAC;AAED,IAAMV,MAAM,GAAGL,UAAU,CAAC6B,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,eAAe,EAAE,SAAS;IAC1BC,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,cAAc;IAC9BC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACX,CAAC;EACDC,cAAc,EAAE;IACdC,SAAS,EAAE,EAAE;IACbC,aAAa,EAAE,KAAK;IACpBJ,UAAU,EAAE;EACd,CAAC;EACDK,KAAK,EAAE;IACLP,IAAI,EAAE,CAAC;IACPQ,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBN,OAAO,EAAE,EAAE;IACXO,WAAW,EAAE;EACf,CAAC;EACDC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZP,SAAS,EAAE;EACb,CAAC;EACDX,WAAW,EAAE;IACXmB,UAAU,EAAE,oBAAoB;IAChCD,QAAQ,EAAE,EAAE;IACZE,SAAS,EAAE;EACb;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}