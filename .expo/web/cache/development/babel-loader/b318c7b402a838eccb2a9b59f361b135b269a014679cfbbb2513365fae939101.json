{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport HomePage from \"./screens/HomePage\";\nimport Providers from \"./screens/Providers\";\nimport Users from \"./screens/Users\";\nimport QuestionsForProviders from \"./screens/QuestionsForProviders\";\nimport RightNow from \"./screens/RightNow\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeName = \"HomePage\";\nvar providersName = \"ProvidersPage\";\nvar usersName = \"UsersPage\";\nvar questionsName = \"QuestionsForProviders\";\nvar rightNow = \"RightNow;\";\nvar Tab = createBottomTabNavigator();\nfunction MainContainer() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: homeName,\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            var rn = route.name;\n            if (rn === homeName) {\n              iconName = focused ? 'home' : 'home-outline';\n            } else if (rn === providersName) {\n              iconName = focused ? 'list' : 'list-outline';\n            } else if (rn === usersName) {\n              iconName = focused ? 'settings' : 'settings-outline';\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      tabBarOptions: {\n        activeTintColor: 'tomato',\n        inactiveTintColor: 'grey',\n        labelStyle: {\n          paddingBottom: 10,\n          fontSize: 10\n        },\n        style: {\n          padding: 10,\n          height: 70\n        }\n      },\n      children: [_jsx(Tab.Screen, {\n        name: homeName,\n        component: HomePage\n      }), _jsx(Tab.Screen, {\n        name: providersName,\n        component: Providers\n      }), _jsx(Tab.Screen, {\n        name: usersName,\n        component: Users\n      }), _jsx(Tab.Screen, {\n        name: questionsName,\n        component: QuestionsForProviders\n      }), _jsx(Tab.Screen, {\n        name: rightNow,\n        component: RightNow\n      })]\n    })\n  });\n}\nexport default MainContainer;","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","Ionicons","HomePage","Providers","Users","QuestionsForProviders","RightNow","jsx","_jsx","jsxs","_jsxs","homeName","providersName","usersName","questionsName","rightNow","Tab","MainContainer","children","Navigator","initialRouteName","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","rn","name","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","paddingBottom","fontSize","style","padding","height","Screen","component"],"sources":["/Users/pranavipanduga/nus-ncs/NUS-NCS-Hackathon-2024/components/MainContainer.jsx"],"sourcesContent":["import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\n// Screens\nimport HomePage from './screens/HomePage';\nimport Providers from './screens/Providers';\nimport Users from './screens/Users';\nimport QuestionsForProviders from './screens/QuestionsForProviders';\nimport RightNow from './screens/RightNow';\n\n\n//Screen names\nconst homeName = \"HomePage\";\nconst providersName = \"ProvidersPage\";\nconst usersName = \"UsersPage\";\nconst questionsName = \"QuestionsForProviders\";\nconst rightNow =\"RightNow;\"\n\nconst Tab = createBottomTabNavigator();\n\nfunction MainContainer() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        initialRouteName={homeName}\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n            let rn = route.name;\n\n            if (rn === homeName) {\n              iconName = focused ? 'home' : 'home-outline';\n\n            } else if (rn === providersName) {\n              iconName = focused ? 'list' : 'list-outline';\n\n            } else if (rn === usersName) {\n              iconName = focused ? 'settings' : 'settings-outline';\n            } \n\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'grey',\n          labelStyle: { paddingBottom: 10, fontSize: 10 },\n          style: { padding: 10, height: 70}\n        }}>\n\n        <Tab.Screen name={homeName} component={HomePage} />\n        <Tab.Screen name={providersName} component={Providers} />\n        <Tab.Screen name={usersName} component={Users} />\n        <Tab.Screen name={questionsName} component={QuestionsForProviders} />\n        <Tab.Screen name={rightNow} component={RightNow} />\n\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default MainContainer;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,QAAQ;AAGf,OAAOC,QAAQ;AACf,OAAOC,SAAS;AAChB,OAAOC,KAAK;AACZ,OAAOC,qBAAqB;AAC5B,OAAOC,QAAQ;AAA2B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI1C,IAAMC,QAAQ,GAAG,UAAU;AAC3B,IAAMC,aAAa,GAAG,eAAe;AACrC,IAAMC,SAAS,GAAG,WAAW;AAC7B,IAAMC,aAAa,GAAG,uBAAuB;AAC7C,IAAMC,QAAQ,GAAE,WAAW;AAE3B,IAAMC,GAAG,GAAGhB,wBAAwB,CAAC,CAAC;AAEtC,SAASiB,aAAaA,CAAA,EAAG;EACvB,OACET,IAAA,CAACT,mBAAmB;IAAAmB,QAAA,EAClBR,KAAA,CAACM,GAAG,CAACG,SAAS;MACZC,gBAAgB,EAAET,QAAS;MAC3BU,aAAa,EAAE,SAAAA,cAAAC,IAAA;QAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;QAAA,OAAQ;UAC7BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA8B;YAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;cAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;cAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;YACjC,IAAIC,QAAQ;YACZ,IAAIC,EAAE,GAAGP,KAAK,CAACQ,IAAI;YAEnB,IAAID,EAAE,KAAKnB,QAAQ,EAAE;cACnBkB,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,cAAc;YAE9C,CAAC,MAAM,IAAII,EAAE,KAAKlB,aAAa,EAAE;cAC/BiB,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,cAAc;YAE9C,CAAC,MAAM,IAAII,EAAE,KAAKjB,SAAS,EAAE;cAC3BgB,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,kBAAkB;YACtD;YAGA,OAAOlB,IAAA,CAACP,QAAQ;cAAC8B,IAAI,EAAEF,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAC/D;QACF,CAAC;MAAA,CAAE;MACHK,aAAa,EAAE;QACbC,eAAe,EAAE,QAAQ;QACzBC,iBAAiB,EAAE,MAAM;QACzBC,UAAU,EAAE;UAAEC,aAAa,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAG,CAAC;QAC/CC,KAAK,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAE;MAClC,CAAE;MAAAtB,QAAA,GAEFV,IAAA,CAACQ,GAAG,CAACyB,MAAM;QAACV,IAAI,EAAEpB,QAAS;QAAC+B,SAAS,EAAExC;MAAS,CAAE,CAAC,EACnDM,IAAA,CAACQ,GAAG,CAACyB,MAAM;QAACV,IAAI,EAAEnB,aAAc;QAAC8B,SAAS,EAAEvC;MAAU,CAAE,CAAC,EACzDK,IAAA,CAACQ,GAAG,CAACyB,MAAM;QAACV,IAAI,EAAElB,SAAU;QAAC6B,SAAS,EAAEtC;MAAM,CAAE,CAAC,EACjDI,IAAA,CAACQ,GAAG,CAACyB,MAAM;QAACV,IAAI,EAAEjB,aAAc;QAAC4B,SAAS,EAAErC;MAAsB,CAAE,CAAC,EACrEG,IAAA,CAACQ,GAAG,CAACyB,MAAM;QAACV,IAAI,EAAEhB,QAAS;QAAC2B,SAAS,EAAEpC;MAAS,CAAE,CAAC;IAAA,CAEtC;EAAC,CACG,CAAC;AAE1B;AAEA,eAAeW,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}