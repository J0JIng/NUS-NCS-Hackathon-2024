{"ast":null,"code":"import { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport DropdownComponent from \"../dropdowncomponents/DropdownComponent\";\nimport DateDropdownComponent from \"../dropdowncomponents/DateDropdownComponent\";\nimport TimeDropdownComponent from \"../dropdowncomponents/TimeDropdownComponent\";\nimport { styles } from \"./HomePage.jsx\";\nimport Benson from \"../../assets/Benson.jsx\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function QuestionsForProviders(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: styles.appContainer,\n    children: [_jsx(View, {\n      style: styles.sectionContainer,\n      children: _jsx(Benson, {\n        width: 200,\n        height: 200,\n        fill: \"black\"\n      })\n    }), _jsx(View, {\n      style: questionsStyles.header,\n      children: _jsx(Text, {\n        children: \"Please answer the following questions\"\n      })\n    }), _jsx(View, {\n      style: questionsStyles.questionContainer,\n      children: _jsx(View, {\n        style: questionsStyles.location,\n        children: _jsx(Text, {\n          style: questionsStyles.questionText,\n          children: \"Time\"\n        })\n      })\n    }), _jsx(View, {\n      style: questionsStyles.questionContainer,\n      children: _jsxs(View, {\n        style: questionsStyles.date,\n        children: [_jsx(Text, {\n          style: questionsStyles.questionText,\n          children: \"Date\"\n        }), _jsx(DateDropdownComponent, {})]\n      })\n    }), _jsx(View, {\n      style: questionsStyles.questionContainer,\n      children: _jsxs(View, {\n        style: questionsStyles.time,\n        children: [_jsx(Text, {\n          style: questionsStyles.questionText,\n          children: \"Time\"\n        }), _jsx(TimeDropdownComponent, {})]\n      })\n    }), _jsx(View, {\n      style: questionsStyles.questionContainer,\n      children: _jsx(View, {\n        style: questionsStyles.event,\n        children: _jsx(Text, {\n          style: questionsStyles.questionText,\n          children: \"Event\"\n        })\n      })\n    })]\n  });\n}\n;\nvar questionsStyles = StyleSheet.create({\n  questionContainer: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 12,\n    borderWidth: 1,\n    borderColor: 'grey',\n    padding: 8\n  },\n  questionText: {\n    textAlign: 'center'\n  },\n  container: {\n    flex: 1,\n    margin: 20,\n    paddingHorizontal: 16\n  },\n  input: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 24,\n    borderBottomWidth: 1,\n    borderBottomColor: 'grey'\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: 'grey',\n    width: '70%',\n    marginRight: 8,\n    padding: 8\n  },\n  goals: {\n    flex: 5\n  },\n  goalItem: {\n    margin: 8,\n    borderRadius: 6,\n    backgroundColor: '#5e0acc',\n    padding: 8,\n    color: 'white'\n  }\n});","map":{"version":3,"names":["useState","StyleSheet","Text","View","Button","TextInput","Pressable","DropdownComponent","DateDropdownComponent","TimeDropdownComponent","styles","Benson","jsx","_jsx","jsxs","_jsxs","QuestionsForProviders","_ref","navigation","style","appContainer","children","sectionContainer","width","height","fill","questionsStyles","header","questionContainer","location","questionText","date","time","event","create","flexDirection","justifyContent","alignItems","marginBottom","borderWidth","borderColor","padding","textAlign","container","flex","margin","paddingHorizontal","input","borderBottomWidth","borderBottomColor","textInput","marginRight","goals","goalItem","borderRadius","backgroundColor","color"],"sources":["/Users/janelle/dev/NusNcsHackathon/NUS-NCS-Hackathon-2024/components/screens/QuestionsForProviders.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { StyleSheet, Text, View, Button, TextInput, Pressable } from 'react-native';\nimport DropdownComponent from '../dropdowncomponents/DropdownComponent';\nimport DateDropdownComponent from '../dropdowncomponents/DateDropdownComponent';\nimport TimeDropdownComponent from '../dropdowncomponents/TimeDropdownComponent';\n\nimport {styles} from './HomePage.jsx';\nimport Benson from '../../assets/Benson.jsx'\n\nexport default function QuestionsForProviders ({navigation}) {\n\n\n    return (\n        <View style = {styles.appContainer}>\n            <View style ={styles.sectionContainer}>\n            <Benson width={200} height={200} fill=\"black\" />\n        </View>\n\n        <View style = {questionsStyles.header}>\n            <Text>Please answer the following questions</Text>\n        </View>\n\n        <View style = {questionsStyles.questionContainer}>\n            \n                <View style = {questionsStyles.location}>\n                <Text style = {questionsStyles.questionText}>Time</Text>\n                </View>\n            </View>\n            <View style = {questionsStyles.questionContainer}>\n                <View style = {questionsStyles.date}>\n                    <Text style = {questionsStyles.questionText}>Date</Text>\n                    <DateDropdownComponent></DateDropdownComponent>\n                </View>\n            </View>\n            <View style = {questionsStyles.questionContainer}>\n                <View style = {questionsStyles.time}>\n                <Text style = {questionsStyles.questionText}>Time</Text>\n                    <TimeDropdownComponent></TimeDropdownComponent>\n                </View>\n            </View>\n            <View style = {questionsStyles.questionContainer}>\n                <View style = {questionsStyles.event}>\n                    <Text style = {questionsStyles.questionText}>Event</Text>\n                </View>\n            </View>\n        </View>\n\n    );\n};\n\nconst questionsStyles = StyleSheet.create({\n\n    questionContainer: {\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginBottom: 12,\n        borderWidth: 1,\n        borderColor: 'grey',\n\n        padding: 8,\n    },\n\n    questionText: {\n        textAlign: 'center'\n    },\n\n    container: {\n        flex: 1,\n        margin: 20,\n        paddingHorizontal: 16,\n    },\n    input: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems:'center',\n        marginBottom: 24, \n        borderBottomWidth: 1,\n        borderBottomColor: 'grey'\n    },\n    textInput: {\n        borderWidth: 1,\n        borderColor: 'grey',\n        width: '70%',\n        marginRight: 8,\n        padding: 8\n    },\n    goals: {\n        flex: 5\n    },\n    goalItem: {\n        margin: 8,\n        borderRadius: 6,\n        backgroundColor: '#5e0acc',\n        padding: 8,\n        color: 'white'\n    },\n\n    \n\n});\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}